# Basic
set icons
set shell bash
set drawbox
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set previewer '~/.config/lf/scope'

# Binding
map B bulkrename
map E extract
map D delete
map M moveto
map gh
map g top
map x $$f
map X !$f
map o &mimeopen "$f"
map O $mimeopen --ask "$f"
map <enter> shell
map <c-f> $lf -remote "send $id select '$(fzf)'"
map <c-n> push :mkdir<space>
map <c-r> reload
map <backspace> set hidden!

map R reload
map A rename # at the very end
map r push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention
map W $setsid -f $TERMINAL >/dev/null 2>&1 # Open Terminal
map Y $printf "%s" "$fx" | xclip -selection clipboard

# Commands
cmd bulkrename $vidir

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && ex $fx
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' $HOME/.bm-dirs | fzf | sed 's|~|$HOME|')" &&
	for x in $fx; do
		eval mv -iv \"$x\" \"$dest\"
	done &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
    text/*) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg) rotdir $f | setsid -f nsxiv -aio 2>/dev/null | lf-select & ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\|heic\|svg\)\(_large\)*$" | setsid -f nsxiv -aio 2>/dev/null | lf-select & ;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
    application/msexcel) setsid -f libreofice --calc $fx >/dev/null 2>&1 ;;
    application/mspowerpoint)  setsid -f libreofice --impress $fx >/dev/null 2>&1 ;;
    application/msword) setsid -f libreofice --writer $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}
