#!/bin/sh

red=#fb4934
green=#8ec07c
blue=#83a598

netraf() {
    update() {
		sum=0
		for arg; do
			read -r i < "$arg"
			sum=$(( sum + i ))
		done
		cache=${XDG_CACHE_HOME:-$HOME/.cache}/${1##*/}
		[ -f "$cache" ] && read -r old < "$cache" || old=0
		printf %d\\n "$sum" > "$cache"
		printf %d\\n $(( sum - old ))
	}

	rx=$(update /sys/class/net/[ew]*/statistics/rx_bytes)
	tx=$(update /sys/class/net/[ew]*/statistics/tx_bytes)

	printf " %4sB  %4sB\\n" $(numfmt --to=iec $rx) $(numfmt --to=iec $tx)
	#printf "^c$green^^d^ %sB ^c$blue^^d^ %sB\\n" $(numfmt --to=iec $rx) $(numfmt --to=iec $tx)

}

wifi() {
    if grep -xq 'up' /sys/class/net/w*/operstate 2>/dev/null ; then
        wlan="直 $(iwctl station wlan0 show | grep 'Connected network' | sed -r 's/Connected network//g' | sed -r 's/[[:space:]]+//g')"
    elif grep -xq 'down' /sys/class/net/w*/operstate 2>/dev/null ; then
        grep -xq '0x1003' /sys/class/net/w*/flags && wlan=" 睊 --"
    fi

    printf "$wlan"
}

vol() {
	[ $(pamixer --get-mute) = true ] && echo 婢 && exit

	vol="$(pamixer --get-volume)"

	if [ "$vol" -gt "66" ]; then
		icon="墳"
	elif [ "$vol" -gt "33" ]; then
		icon="奔"
	elif [ "$vol" -gt "0" ]; then
		icon="奄"
	else
		echo ﱝ && exit
	fi
	echo "$icon $vol"
}

batstate() {
    state=$(cat /sys/class/power_supply/CMB*/status)
    if   [ $state = "charging" ] || [ $state = "Charging" ]; then
        printf " " # charging
    elif [ $state = "discharging" ] || [ $state = "Discharging" ]; then
        printf "" # discharging
    elif [ $state = "idle" ] || [ $state = "Unknown" ]; then
        printf " " # idle
    else
        printf " " # unknown
    fi
}

bat() {
    cap=$(cat /sys/class/power_supply/CMB*/capacity)
    if   [ $cap -ge 0 ] && [ $cap -le 5 ]; then
        printf " $cap"

    elif [ $cap -ge 6 ] && [ $cap -le 25 ]; then
        printf " $cap"

    elif [ $cap -ge 26 ] && [ $cap -le 50 ]; then
        printf " $cap"

    elif [ $cap -ge 51 ] && [ $cap -le 70 ]; then
        printf " $cap"

    elif [ $cap -ge 71 ] && [ $cap -le 90 ]; then
        printf " $cap"

    elif [ $cap -ge 91 ] && [ $cap -le 100 ]; then
        printf " $cap"

    else
        # echo ""
        printf ""
    fi

#        if   [ $cap -ge 0 ] && [ $cap -le 10 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#cc241d^^r19,9,1,6^^d^^f30^"$cap
#
#    elif [ $cap -ge 11 ] && [ $cap -le 20 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#cc241d^^r17,9,3,6^^d^^f30^"$cap
#
#    elif [ $cap -ge 21 ] && [ $cap -le 25 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#fe8019^^r16,9,4,6^^d^^f30^"$cap
#
#    elif [ $cap -ge 26 ] && [ $cap -le 30 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r15,9,5,6^^d^^f30^"$cap
#
#    elif [ $cap -ge 31 ] && [ $cap -le 40 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r15,9,5,6^^d^^f30^"$cap
#    elif [ $cap -ge 41 ] && [ $cap -le 50 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r14,9,6,6^^d^^f30^"$cap
#    elif [ $cap -ge 51 ] && [ $cap -le 60 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r13,9,7,6^^d^^f30^"$cap
#    elif [ $cap -ge 61 ] && [ $cap -le 70 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r12,9,8,6^^d^^f30^"$cap
#    elif [ $cap -ge 71 ] && [ $cap -le 80 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r11,9,9,6^^d^^f30^"$cap
#    elif [ $cap -ge 81 ] && [ $cap -le 90 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r10,9,10,6^^d^^f30^"$cap
#    elif [ $cap -ge 91 ] && [ $cap -le 99 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r8,9,12,6^^d^^f30^"$cap
#    elif [ $cap -eq 100 ]; then
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#b8bb26^^r6,9,14,6^^d^^f30^"$cap
#    else
#        # echo ""
#        printf "^f5^^r2,10,2,4^^r4,7,18,10^^c#222222^^r5,8,16,8^^c#222222^^r5,9,14,6^^d^^f30^" "?"
#    fi

}

fulldate() {
    date="$(date +"%Y/%m/%d/%a")"
    clock="$(date +"%H:%M")"
    printf " $date $clock"
}

while true; do
    dwm -s " $(netraf) $(wifi) $(vol) $(batstate)$(bat) $(fulldate) "
    sleep 0.5
done
